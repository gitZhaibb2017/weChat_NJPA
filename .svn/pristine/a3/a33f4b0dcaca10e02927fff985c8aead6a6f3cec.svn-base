package com.paic.pawj.investigationVue.service.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.paic.pawj.investigationVue.dao.IvtgBaseFormVue;
import com.paic.pawj.investigationVue.dao.IvtgBaseFormVueMapper;
import com.paic.pawj.investigationVue.dao.IvtgFormDTO;
import com.paic.pawj.investigationVue.dao.IvtgFormVue;
import com.paic.pawj.investigationVue.dao.OptionColumnItem;
import com.paic.pawj.investigationVue.dao.OptionItem;
import com.paic.pawj.investigationVue.dao.QuestionsDataVue;
import com.paic.pawj.investigationVue.dao.QuestionsDataVueDto;
import com.paic.pawj.investigationVue.service.IvtgFormVueService;

@Service("ivtgFormVueService")
public class IvtgFormVueServiceImpl implements IvtgFormVueService {

	@Resource
	IvtgBaseFormVueMapper dao;
	
	
	@Override
	public int saveIvtgBaseFormVue(IvtgBaseFormVue ivtgBaseFormVue) {
		return dao.saveIvtgBaseFormVue(ivtgBaseFormVue);
	}

	@Override
	public int saveQuestionsDataVue(QuestionsDataVueDto questionsDataVue) {
		return dao.saveQuestionsDataVue(questionsDataVue);
	}

	@Override
	public int saveOptionItem(List<OptionItem> optionItem) {
		return dao.saveOptionItem(optionItem);
	}

	@Override
	public int saveOptionItemColumn(List<OptionColumnItem> optionItemColumn) {
		return dao.saveOptionItemColumn(optionItemColumn);
	}
	
	public boolean saveIvtg(IvtgFormVue IvtgFormVue){
		try {
			Gson gson = new Gson();
			IvtgBaseFormVue ivtgBaseForm = 
					gson.fromJson(IvtgFormVue.getIvtgBaseForm(), IvtgBaseFormVue.class);
			List<QuestionsDataVue> questionsData =gson.fromJson(IvtgFormVue.getQuestionsData(),new TypeToken<List<QuestionsDataVue>>(){}.getType());
			UUID uuid=UUID.randomUUID();
			if(ivtgBaseForm.getTime().length>0){
				String startTime=ivtgBaseForm.getTime()[0].replace("T", " ").replace("Z", "");
				String endTime=ivtgBaseForm.getTime()[1].replace("T", " ").replace("Z", "");
				ivtgBaseForm.setPlanStartTime(startTime);
				ivtgBaseForm.setPlanEndTime(endTime);
			}
			ivtgBaseForm.setInvestigationId(uuid.toString());
			ivtgBaseForm.setQuestionNum(questionsData.size());
			this.saveIvtgBaseFormVue(ivtgBaseForm);
			if(questionsData.size()>0){
				this.saveQuestion(questionsData,uuid.toString());
			}
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}
	

	private void saveQuestion(List<QuestionsDataVue> questionsDataVue,String uuid){
		List<OptionItem> optList=new ArrayList<OptionItem>();
		List<OptionColumnItem> optcList=new ArrayList<OptionColumnItem>();
		for (QuestionsDataVue qdv : questionsDataVue) {
			QuestionsDataVueDto qdvdDto=new QuestionsDataVueDto();
			String qid=UUID.randomUUID().toString();
			//问题
			qdvdDto.setInvestigationId(uuid);
			qdvdDto.setQuestionsId(qid);
			qdvdDto.setOptionType(qdv.getOptionType());
			qdvdDto.setSeq(qdv.getSeq());
			qdvdDto.setQues(qdv.getQues());
			this.saveQuestionsDataVue(qdvdDto);
			int optcode=0;
			if(qdv.getOptionItems()!=null){
				for (OptionItem opt : qdv.getOptionItems()) {
					String oid=UUID.randomUUID().toString();
					//选项4
					opt.setOptionId(oid);
					opt.setOptionCode(optcode);
					optcode++;
					opt.setQuestionsId(qid);
					optList.add(opt);
				}
			}
			
			int optccode=0;
			if(qdv.getOptionColumnItems()!=null){
				for (OptionColumnItem optc : qdv.getOptionColumnItems()) {
					String matrixId=UUID.randomUUID().toString();
					//选项
					optc.setMatrixId(matrixId);
					optc.setQuestionsId(qid);
					optc.setDisplayOrder(optccode);
					optccode++;
					optcList.add(optc);
				}
				
			}
			
			
		}
		if(optList.size()>0){
			this.saveOptionItem(optList);
		}
		if(optcList.size()>0){
			this.saveOptionItemColumn(optcList);
		}
	}
	
	
	@Override
	public IvtgFormDTO getQuestionById(String investigationId) {
		IvtgFormDTO dto =new IvtgFormDTO();
		//问题列表
		List<QuestionsDataVue> questionsData = new ArrayList<QuestionsDataVue>();
		//选项列集合
		List<OptionColumnItem> optionColumnItems = new ArrayList<OptionColumnItem>();
		//选项集合
		List<OptionItem> optionItems = new ArrayList<OptionItem>();
		//问卷基本信息
		IvtgBaseFormVue baseFormVue = dao.getInvestigationById(investigationId);
		questionsData = dao.getQuestionListById(investigationId);
		dto.setIvtgBaseForm(baseFormVue);
		for(QuestionsDataVue qustData:questionsData){
			dealCurrentIndex(qustData);
			optionItems =dao.getQuestionOptionListById(qustData.getQuestionsId());
			qustData.setOptionItems(optionItems);
			optionColumnItems=dao.getOptionMatrixListById(qustData.getQuestionsId());
			qustData.setOptionColumnItems(optionColumnItems);
		}
		dto.setQuestionsData(questionsData);
	   return dto;
	}
	
	private void dealCurrentIndex(QuestionsDataVue dto){
		String seq = dto.getSeq();
		String currentIndex = "";
		if (seq != null && !seq.equals("")){
			 int i =Integer.valueOf(seq)-1;
			 currentIndex= String.valueOf(i);
		}
		dto.setCurrentIndex(currentIndex);
	}
	
	
}

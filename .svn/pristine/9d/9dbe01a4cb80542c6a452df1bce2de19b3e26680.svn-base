<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
				           http://www.springframework.org/schema/context
				           http://www.springframework.org/schema/context/spring-context-3.2.xsd
				           http://www.springframework.org/schema/tx 
				           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    
    <!-- 加载配置JDBC文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 数据源 -->
    <bean id="dataSource"  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName">
    		<value>${jdbc.driverClassName}</value>
     	</property>
    	<property name="url">
    		<value>${jdbc.url}</value>
    	</property>
   		<property name="username">
    		<value>${jdbc.username}</value>
    	</property>
    	<property name="password">
    		<value>${jdbc.password}</value>
    	</property>
    </bean>
    
	<!-- 下面这两个开启了自动扫描功能 -->
	<!-- 开启注解配置 即Autowried -->  
	<!--   <context:annotation-config/>   -->
    <!--    使用自动注入的时候要  添加他来扫描bean之后才能在使用的时候   -->
	<!--其实component-scan 就有了annotation-config的功能即把需要的类注册到了spring容器中-->
    <context:component-scan base-package="com.paic.pawj"/>  
    <!-- 在使用mybatis时 spring使用sqlsessionFactoryBean 来管理mybatis的sqlsessionFactory-->
    <!-- 而像这种使用接口实现的方式 是使用sqlsessionTemplate来进行操作的，他提供了一些方法 -->
    <bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<!-- mybatis配置文件路径-->
    	<property name="configLocation"  value="classpath:config/pawj.mybatis.xml"/>
    </bean>
    <!-- 配置sqlsession 产生这个实例就是通过 sqlsessionTemplate来实现的 
    <bean id="sqlSession" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
    	<constructor-arg index="0">
    		<ref  bean="sqlSessionFactory"/>
    	</constructor-arg>
    </bean>-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<property name="basePackage" value="com.paic.pawj.**.dao"></property>
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!-- 事务 需要三件事才可以  一具体的事务实现着  二事务管理器  三  aop 事务控制  不起作用-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">    
        <property name="dataSource" ref="dataSource" />    
    </bean>
   <!-- 使用全注释事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>
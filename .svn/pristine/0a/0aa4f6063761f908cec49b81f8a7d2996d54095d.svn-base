package com.paic.pawj.basic.account.service.impl;

import java.sql.Timestamp;
import javax.annotation.Resource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;


import com.paic.pawj.answer.dao.AnswersMapper;
import com.paic.pawj.answer.dto.Answers;
import com.paic.pawj.answer.service.AnswersService;
import com.paic.pawj.basic.account.dao.AccountChangeInfo;
import com.paic.pawj.basic.account.dao.AccountChangeInfoMapper;
import com.paic.pawj.basic.account.dao.AccountQuery;
import com.paic.pawj.basic.account.dao.AccountQueryMapper;
import com.paic.pawj.basic.account.service.AccountChangeService;

@Service("accountChangeService")
public class AccountChangeServiceImpl implements AccountChangeService {

	@Resource
	private AccountChangeInfoMapper accountChangeDAO;

	@Resource
	private AccountQueryMapper accountQueryDAO;
	
	@Resource
	private AnswersMapper answersDao;
	
	@Autowired
	private AnswersService answersService;
	
	@Override
	@Transactional
	public AccountChangeInfo changeAccountByIvtg(String userID, String ivtgID)
	{
		AccountChangeInfo accountChange = accountChangeDAO.queryAccountChangesByIvtg(ivtgID);
		AccountQuery accountQuery = accountQueryDAO.queryAccountByUserID(userID);
		accountChange.setAccountID(accountQuery.getAccountID());
		accountChange.setUserID(userID);
		accountChange.setBalance(accountQuery.getBalance());
		accountChange.setPoint(accountQuery.getPointChange());
		accountChange.setSourceID(ivtgID);
		accountChange.setSource("ivtg_add");
		accountChange.setDoTime(new Timestamp(System.currentTimeMillis()));

		accountChangeDAO.updateAccountInfo(accountChange);
		accountChangeDAO.insertAccountBalance(accountChange);
		accountChangeDAO.insertAccountPoint(accountChange);
		return accountChange;
		//return accountChangeDAO.getAccountInfo(accountChange);
	}
	
	@Override
	@Transactional(rollbackFor = Exception.class)
	public AccountChangeInfo queryAccountChangesByIvtg(String userID, String ivtgID){
//		answersService.operLastQuestion(answer,userID);
		AccountChangeInfo accountChange = accountChangeDAO.queryAccountChangesByIvtg(ivtgID);
		return accountChange;
	}
}

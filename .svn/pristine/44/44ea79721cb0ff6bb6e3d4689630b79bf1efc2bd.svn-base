package com.paic.pawj.report.service.impl;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.paic.pawj.report.dao.ReportMapper;
import com.paic.pawj.report.dto.ReportDTO;
import com.paic.pawj.report.dto.ReportVoteDTO;
import com.paic.pawj.report.service.ReportService;

@Service("reportService")
public class ReportServiceImpl implements ReportService {

	@Resource
	private ReportMapper reportDao;
	
	@Override
	public Map<String, Object> queryReportList(ReportDTO reportDTO) {
		// total rows
		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("total", reportDao.queryReportList(reportDTO));
		resultMap.put("rows", reportDao.queryReportCount(reportDTO));
		return resultMap;
	}

	@Override
	@Transactional(rollbackFor = Exception.class)
	public Map<String, Object> voteReport(ReportVoteDTO reportVoteDTO) {
		Map<String, Object> returnMap = new HashMap<String, Object>();
		// 查询是否已经投过票
		int voteCnt = reportDao.queryVoteCount(reportVoteDTO);
		if (voteCnt == 0){
			// 插入投票记录
			reportDao.addReportInfo(reportVoteDTO);
			// 修改微报告投票数
			updateReportVote(reportVoteDTO);
		}
		// 获得投票信息
		Map<String, Object> paramMap = new HashMap<String, Object>();
		paramMap.put("reportId", reportVoteDTO.getReportId());
		ReportDTO reportObj = reportDao.queryReportInfo(paramMap);
		returnMap.put("obj", reportObj);
		return returnMap;
	}

	/**
	 * 修改微报告投票数
	 * @param reportVoteDTO
	 */
	private synchronized void updateReportVote(ReportVoteDTO reportVoteDTO) {
		reportDao.updateReportVote(reportVoteDTO);
	}
	

}

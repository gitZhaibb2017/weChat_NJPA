package com.paic.pawj.basic.redis;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import redis.clients.jedis.ShardedJedis;
import redis.clients.jedis.ShardedJedisPool;

@Repository("redisClient")
public class RedisClient {
	
	@Autowired
	private ShardedJedisPool shardedJedisPool;
	
	public String set(String key, String value)
	{
		String result = null;
		ShardedJedis jedis = shardedJedisPool.getResource();
		try
		{
			result = jedis.set(key, value);
		}
		catch(Exception e){
			
		}
		finally
		{
			if (null != jedis){
				jedis.close();
			}
		}
		return result;
	}
	
	public String get(String key)
	{
		String result = null;
		ShardedJedis jedis = shardedJedisPool.getResource();
		try
		{
			result = jedis.get(key);
		}
		catch(Exception e){
			
		}
		finally
		{
			if (null != jedis){
				jedis.close();
			}
		}
		return result;
	}
	
	public Long expire(String key, int seconds)
	{
		Long result = null;
		ShardedJedis jedis = shardedJedisPool.getResource();
		try
		{
			result = jedis.expire(key, seconds);
		}
		catch(Exception e){
			
		}
		finally
		{
			if (null != jedis){
				jedis.close();
			}
		}
		return result;
	}
	
	public Long pttl(String key)
	{
		Long result = null;
		ShardedJedis jedis = shardedJedisPool.getResource();
		try
		{
			result = jedis.pttl(key);
		}
		catch(Exception e){
			
		}
		finally
		{
			if (null != jedis){
				jedis.close();
			}
		}
		return result;
	}
	
	public Long del(String key)
	{
		Long result = null;
		ShardedJedis jedis = shardedJedisPool.getResource();
		try
		{
			result = jedis.del(key);
		}
		catch(Exception e){
			
		}
		finally
		{
			if (null != jedis){
				jedis.close();
			}
		}
		return result;
	}
}

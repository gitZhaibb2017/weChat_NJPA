package com.paic.pawj.prize.service.impl;

import java.util.HashMap;
import java.util.Map;













import javax.annotation.Resource;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Service;

import com.paic.pawj.prize.dao.LotteryPrizeMapper;
import com.paic.pawj.prize.dto.LotteryPrize;
import com.paic.pawj.prize.service.LotteryPrizeService;

@Service("lotteryPrizeService")
public class LotteryPrizeServiceImpl implements LotteryPrizeService {
	public static final Log LOG = LogFactory.getLog(LotteryPrizeServiceImpl.class);
	
	@Resource
	private LotteryPrizeMapper dao;
	
	@Override
	public Map<String, Object> queryLotteryPrize(LotteryPrize lotteryPrize) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		resultMap.put("rows", dao.queryLotteryPrizeList(lotteryPrize));
		resultMap.put("total", dao.queryLotteryPrizeCount(lotteryPrize));
		return resultMap;
	}

	@Override
	public void addLotteryPrize(LotteryPrize lotteryPrize) {
			dao.addLotteryPrized(lotteryPrize);
		
	}

	@Override
	public void updateLotteryPrize(LotteryPrize lotteryPrize) {
			dao.updateLotteryPrize(lotteryPrize);
		
	}

	@Override
	public void deleteLotteryPrize(int prizeId) {
		try {
			dao.deleteLotteryPrized(prizeId);
		} catch (Exception e) {
			LOG.debug("错误原因:",e);
		}
	}
	@Override
	public boolean havePrizeId(int prizeId) {
		int count = dao.havePrizeId(prizeId);
		if (count > 0) {
			return true;
		} else {
			return false;
		}

	}

}

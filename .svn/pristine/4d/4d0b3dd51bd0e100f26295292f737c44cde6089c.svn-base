/**
 * 
 */
package com.paic.pawj.answer.dao;

import java.util.List;
import java.util.Map;

import com.paic.pawj.answer.dto.AnswerQuestion;
import com.paic.pawj.answer.dto.AnswerRecord;
import com.paic.pawj.answer.dto.Answers;
import com.paic.pawj.answer.dto.BusinvestigationDTO;
import com.paic.pawj.investigation.dao.OptionQueryDTO;
import com.paic.pawj.investigation.dao.Question;


/**
 * @author happy
 *
 */
public interface AnswersMapper {
    public void saveAnswers(Answers answers);

	public List<Map<String, Object>> queryQstnaireList();
	
	public int getAnswerUserCount(String qsrId);
	
	public Integer getQsrNumber(String qsrId);
	
	public List<Answers> getUserAnswerByQsr(Answers answers);
	
	public AnswerRecord queryAnswerRecordByUser(AnswerRecord answerRecord);
	
	public void insertAnswerRecord(AnswerRecord answerRecord);
	
	/**
	 * 保存答题
	 */
	public void insertAnswerOne(Answers answer);
	
	public String getQuestionIdByOption(String optionId);
	
	public List<OptionQueryDTO> getNextQuestionByParam(String questionId);
	
	public List<OptionQueryDTO> getNextQuestionMatrixByParam(String questionId);
	
	/**
	 * 修改答题记录为完成状态
	 */
	public void updaterAnswerRecordEnd(Map<String, Object> paramMap);
	
	public List<OptionQueryDTO> getFirstQuestionOfQuestionNaire(String investigationId);
	
	public List<OptionQueryDTO> getFirstQuestionOfQuestionNaireMatrix(String investigationId);
	
	/**
	 * 获得答题记录是否添加
	 */
	public int getAnswerRecord(AnswerRecord answerRecord);
	
	/**
	 * 添加答题记录-question
	 */
	public void insertAnswerQuestion(AnswerQuestion answerQuestion);
	
	/**
	 * 获得当前题目的上一题QuestionId
	 */
	public Map<String, Object> getQuestionIdByAnswerSeq(Map<String, Object> paramMap);
	
	/**
	 * 获取问卷信息
	 * @return
	 */
	public List<BusinvestigationDTO> getInvestigation(String userId);
	/**
	 * 获取问卷实际发布数量
	 * @param qsrId
	 * @return
	 */
	public BusinvestigationDTO getreturnCopyByqsrId(String qsrId);
	
	
	/**
	 * 获取问卷答题记录数
	 * @param qsrId
	 * @return
	 */
	public int getAnswerRecordCount(String qsrId);

	public List<String> getTheLastQuestion(String questionId);

	public String getAssociateByQuestionId(String questionId);

	public int getTheAnswersAssociatedByOption(Answers param);

	public String getQuestionTypeById(String nextQuestionId);

	public Question getQuestionOfQaq(String nextQuestionId);
	
	/**
	 * 获得当前题目的答案
	 */
	public List<Answers> getCurrentQuestAns(Map<String, Object> paramMap);
	
	/**
	 * 删除用户已经保存的单题记录
	 */
	public void deleteUserHasAnswer(Map<String, Object> paramMap);

	public Question getTheFirstQuestionTypeAndId(String investigationId);
	
	
}
